9: Practicing With The Else Statement

Append any names in planet_names that are longer than 5 characters to long_names. 
Otherwise, append the names to short_names. To accomplish this:
Loop through each item in planet_names.
Use the len() function to find the length of the item.
If the length is greater than 5, append the item to long_names.
Otherwise, append it to short_names.
When complete, short_names should contain any planet names less than 6 characters long, 
and long_names should contain any planet names 6 characters or longer.

Result:

planet_names = ["Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Neptune", "Uranus"]
short_names = []
long_names = []
for name in planet_names:
    if len(name) > 5:
        long_names.append (name)
    else:
        short_names.append (name)
        
10: Counting With Dictionaries

Count up how many times each element occurs in the dictionary named pantry that appears in the code block below. 
You'll need to:
Create an empty dictionary named pantry_counts.
Loop through each item in pantry.
If the item appears in pantry_counts, add 1 to the value in pantry_counts for the item's key.
Otherwise, add the item to pantry_counts as a key, with the value 1.
When finished, each item in pantry will have its own key in pantry_counts, 
and its value will be the number of times the item appears in pantry.

Result:
pantry = ["apple", "orange", "grape", "apple", "orange", "apple", "tomato", "potato", "grape"]
pantry_counts = {}

for  item in pantry:
    if item in pantry_counts:
        pantry_counts[item] = pantry_counts[item] + 1
    else:
    
11: Counting The Weather

Now that we have some practice counting with dictionaries, 
it's time to count how often each type of weather occurs in the weather list.

Instructions
Count how many times each type of weather occurs in the weather list, 
and store the results in a new dictionary called weather_counts.
When finished, weather_counts should contain a key for each different type of weather in the weather list, 
along with its associated frequency. 
Here's a preview of how the result should format the weather_counts dictionary (note that you'll be using real values, 
rather than the dummy ones below):
